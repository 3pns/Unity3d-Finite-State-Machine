v2.4 June 2015
	*Bugfix: StateTransition.Overwrite is now consistent with expected behviour
	*Added "Finally" state function that is always called, even if overwrite cancels the exit routine

v2.3 April 2015
	*Breaking change: Refactored StateMachineBehaviour and StateMachineEngine to StateBehaviour and StateEngine to avoid Unity5 conflicts
	*Added the concept of StateTransition. Two options: Safe and Overwrite. The default is safe which allows the current coroutine to finish before changing to the next state. 
	*Better test coverage using UnityTestTools integration tests

v2.2 January 2015
	*State Update & Late Update functions no longer run during transitions (i.e. Enter & Exit functions)
	*Bug fix: Changing state from a states Update function no longer cause states to enter twice. Note: changing from functions outside of a state can still cause this behaviour

v2.1 December 2014
	*Change initialization method and added convenience methods on StateMachineBehaviour. NotePrevious projects will need change Initialization calls.

v2.0 November 2014
	Complete rewrite of State Machine for Unity. Now has the following features

	* Simple use of Enums as state definition. 
	* Minimal initialization - one line of code. 
	* Incredibly easy to add/remove states
	* Uses reflection to avoid boiler plate code - only write the methods you actually need. 
	* Compatible with Coroutines.
	* Tested on iOS and Android

v1.0 April 2012
	A state machine for Unity